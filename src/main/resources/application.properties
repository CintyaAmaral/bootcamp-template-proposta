spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation = true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect

spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/proposta}
spring.datasource.username =keycloak
spring.datasource.password = password
spring.jpa.hibernate.ddl-auto = update

# Endereço externo
host.analise-financeira=${HOST_ANALISE_FINANCEIRA:http://localhost:9999}
host.cartao=${HOST_CARTOES:http://localhost:8888}

# Time out de resposta e conecção Feign
feign.config.analisefinanceira.read-timeout=1000
feign.config.analisefinanceira.connect-timeout=1000

#Time Scheduled
tempo.verificadordecartao=${TIME_SCHEDULER:5000}

# Spring Boot Actuator
management.endpoints.web.exposure.include=${ENDPOINTS_PROMETHEUS:info,health,prometheus}
management.metric.tags.aplicacao=${spring.application.name}

# Security
spring.security.oauth2.resourceserver.jwt.issuer-uri=${JWT_ISSUER:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${JWT_JWKSET:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}

# Jaeger - Habilita ou não
opentracing.jaeger.enable=${true}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name}

# Jaeger - Endereço para enviar metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_URL:http://hostdocker.internal:14268/api/traces}

# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

